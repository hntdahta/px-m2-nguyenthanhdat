// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using px_m2_nguyenthanhdat.Models;

namespace px_m2_nguyenthanhdat.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20201113042519_seeder_table_Book")]
    partial class seeder_table_Book
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("px_m2_nguyenthanhdat.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<int>("YearReleased")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Đẹt",
                            CategoryId = 1,
                            Description = "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's printer took a galley of type and Scrambled it to make a type and typesetting industry. Lorem Ipsum has been the book.",
                            ImageUrl = "https://i.imgur.com/4TlVQX1.jpg",
                            Name = "How to be a Bawse",
                            Stock = 500,
                            YearReleased = 2000
                        },
                        new
                        {
                            Id = 2,
                            Author = "Đẹt",
                            CategoryId = 2,
                            Description = "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's printer took a galley of type and Scrambled it to make a type and typesetting industry. Lorem Ipsum has been the book.",
                            ImageUrl = "https://i.imgur.com/S7yeWSZ.jpg",
                            Name = "Keepers of the kalachakara",
                            Stock = 500,
                            YearReleased = 2000
                        },
                        new
                        {
                            Id = 3,
                            Author = "Đẹt",
                            CategoryId = 3,
                            Description = "Bla bla bla bla",
                            ImageUrl = "https://i.imgur.com/DljpL5t.jpg",
                            Name = "Zero Sum",
                            Stock = 500,
                            YearReleased = 2000
                        },
                        new
                        {
                            Id = 4,
                            Author = "Đẹt",
                            CategoryId = 4,
                            Description = "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's printer took a galley of type and Scrambled it to make a type and typesetting industry. Lorem Ipsum has been the book.",
                            ImageUrl = "https://i.imgur.com/3mTNfXC.jpg",
                            Name = "Harry Porter",
                            Stock = 500,
                            YearReleased = 2000
                        },
                        new
                        {
                            Id = 5,
                            Author = "Đạt",
                            CategoryId = 5,
                            Description = "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's printer took a galley of type and Scrambled it to make a type and typesetting industry. Lorem Ipsum has been the book.",
                            ImageUrl = "https://i.imgur.com/Ck6vqFT.jpg",
                            Name = "PS From Paris",
                            Stock = 500,
                            YearReleased = 2000
                        });
                });

            modelBuilder.Entity("px_m2_nguyenthanhdat.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Fantasy"
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Adventure"
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Romance"
                        },
                        new
                        {
                            Id = 4,
                            CategoryName = "Mystery"
                        },
                        new
                        {
                            Id = 5,
                            CategoryName = "Horror"
                        });
                });

            modelBuilder.Entity("px_m2_nguyenthanhdat.Models.Book", b =>
                {
                    b.HasOne("px_m2_nguyenthanhdat.Models.Category", "Category")
                        .WithMany("Books")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
